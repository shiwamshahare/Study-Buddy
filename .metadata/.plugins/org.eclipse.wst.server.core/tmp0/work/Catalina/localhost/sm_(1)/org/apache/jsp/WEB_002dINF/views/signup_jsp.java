/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-10-14 09:25:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    ");
String mesg= request.getParameter("msg"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Sign-up</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Arial', sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            /* background-color: #f8f8f8; */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            font-size: 36px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 span {\r\n");
      out.write("            color: #007bff;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .parent {\r\n");
      out.write("            margin: 30px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form {\r\n");
      out.write("            margin: 40px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            max-width: 400px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-heading {\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"submit\"] {\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"submit\"]:hover {\r\n");
      out.write("            background-color: #0359b5;  \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        p {\r\n");
      out.write("            color: #555;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a {\r\n");
      out.write("            color: #007bff;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        img {\r\n");
      out.write("            width: 33%;\r\n");
      out.write("            height: 35%;\r\n");
      out.write("            margin-right: 45px;\r\n");
      out.write("        }\r\n");
      out.write("        .form-heading{\r\n");
      out.write("            transition: transform 0.3s  ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .overlay {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            background: rgba(0, 0, 0, 0.5);\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal {\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .close-btn {\r\n");
      out.write("            background: #007bff;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Study<span>Buddy</span></h1>\r\n");
      out.write("\r\n");
      out.write("      ");
if(mesg!=null) {
      out.write("\r\n");
      out.write("                	\r\n");
      out.write("                	<div style=\"color: red;\">\r\n");
      out.write("                	  ");
      out.print(mesg );
      out.write("\r\n");
      out.write("                	</div>\r\n");
      out.write("                ");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"parent\">\r\n");
      out.write("            <!-- <img src=\"https://creator-cdn.icons8.com/4lqJnwl4IVEg3jQTkQhjHXXodWG6H43r9_CIICcMBvM/rs:fit:185:200/czM6Ly9pY29uczgt/b3VjaC1wcm9kLWFz/c2V0cy9wbmcvNjA5/LzM2ODE4YWM0LTAz/NmYtNGFlOC1iOGI3/LTlhOTJlNjBmNzU1/MS5wbmc.png\" alt=\"\"> -->\r\n");
      out.write("            <img src=\"https://img.freepik.com/free-vector/sign-up-concept-illustration_114360-7875.jpg?t=st=1709134396~exp=1709137996~hmac=de9d0df585ce56abaefa184c56fb99a82f1b7ce3f46770e1de1da3e799651c80&w=740\" alt=\"\">\r\n");
      out.write("            <form id=\"signupForm\" action=\"signup\" method=\"POST\">\r\n");
      out.write("                <p class=\"form-heading\">Sign up and start learning</p>\r\n");
      out.write("                <input type=\"text\" name=\"fname\" id=\"fname\" placeholder=\"First name\" required>\r\n");
      out.write("                <input type=\"text\" name=\"lname\" id=\"lname\" placeholder=\"Last name\" required>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email Address\" required>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"number\" name=\"mob\" id=\"mob\" placeholder=\"Phone Number\" required>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" required>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"submit\" value=\"Sign Up\">\r\n");
      out.write("\r\n");
      out.write("                <p>Already have an account? <a href=\"login-sm\">Log in</a></p>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("<!-- -\r\n");
      out.write("    <div id=\"customModal\" class=\"overlay\">\r\n");
      out.write("        <div class=\"modal\">\r\n");
      out.write("            <p>Welcome to StudyBuddy!</p>\r\n");
      out.write("            <button class=\"close-btn\" onclick=\"closeModal()\">Close</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    -->\r\n");
      out.write("   <!-- \r\n");
      out.write("    <script>\r\n");
      out.write("        document.getElementById('signupForm').addEventListener('submit', function(event) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("            showWelcomeModal();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function showWelcomeModal() {\r\n");
      out.write("            document.getElementById('customModal').style.display = 'flex';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function closeModal() {\r\n");
      out.write("            document.getElementById('customModal').style.display = 'none';\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("     -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
